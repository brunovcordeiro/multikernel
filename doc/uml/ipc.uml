@startuml

!include hal.uml

remove HAL.CoreInterface
remove HAL.CoreTypes
remove HAL.SetupInterface
remove HAL.PortalInterface

namespace IPC {
	class NameClient {
		+ int sys_name_link(int nodeid, const char *name)
		+ int sys_name_unlink(const char *name)
		+ int sys_name_lookup(char *name)
		+ void name_finalize(void)
		- int name_init(void)
		- int initialized = 0;
		- int server;
	}

	class NameMessage {
		+ uint16_t source
		+ uint16_t op
		+ int32_t nodeid
		+ char name[NANVIX_PROC_NAME_MAX]
	}

	enum NameMessageTypes {
		+ const int NAME_LOOKUP
		+ const int NAME_LINK
		+ const int NAME_UNLINK
		+ const int NAME_SUCCESS
		+ const int NAME_FAIL
	}

	class Mailbox {
		+ char name[NANVIX_PROC_NAME_MAX]
		+ int fd
		+ int flags
	}

	class MailboxOperations {
		- const int MAILBOX_USED
		- const int MAILBOX_WRONLY
		- int inboxes[HAL_NR_NOC_IONODES];
		- int initialized[HAL_NR_NOC_IONODES] = { 0, };
		- struct mailbox mailboxes[HAL_NR_MAILBOX]
		- int mailbox_alloc(void)
		- void mailbox_free(int mbxid)
		- void unset_inbox()
		+ int destroy_inbox(int index)
		+ int get_inbox(void)
		+ int initialize_inbox(int index)
		+ int mailbox_create(char *name)
		+ int mailbox_open(char *name)
		+ int mailbox_read(int mbxid, void *buf, size_t)
		+ int mailbox_write(int mbxid, const void *buf, size_t)
		+ int mailbox_close(int mbxid)
		+ int mailbox_unlink(int mbxid)
	}

	class Barrier {
		+ int local;
		+ int remote;
		+ int nnodes;
		+ int nodes[HAL_NR_NOC_NODES];
		+ int flags;
	}

	class BarrierOperations {
		- const int BARRIER_USED
		- struct barrier barriers[HAL_NR_NOC_NODES];
		- int barrier_alloc(void)
		- int barrier_free(int barrierid)
		+ int barrier_create(int *nodes, int nnodes)
		+ int barrier_wait(int barrierid)
		+ int barrier_unlink(int barrierid)
	}

	IPC.NameMessage  .> IPC.NameMessageTypes : <<use>>
	IPC.NameClient   .> IPC.NameMessage      : <<use>>
	IPC.NameClient  ..> HAL.NoCInterface     : <<use>>
	IPC.NameClient  ..> HAL.MailboxInterface : <<use>>
	IPC.NameClient  ..> IPC.MailboxOperations : <<use>>

	IPC.MailboxOperations   .> IPC.Mailbox           : <<use>>
	IPC.MailboxOperations   .> HAL.MailboxInterface  : <<use>>
	IPC.MailboxOperations   .> HAL.NoCInterface      : <<use>>
	IPC.MailboxOperations   .> NameClient            : <<use>>

	IPC.BarrierOperations .> HAL.SyncInterface : <<use>>
	IPC.BarrierOperations .> HAL.NoCInterface  : <<use>>
	IPC.BarrierOperations .> IPC.Barrier       : <<use>>
}

@enduml
